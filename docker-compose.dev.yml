# Docker Compose配置 - 开发环境
# 用于本地开发时运行中间件服务（PostgreSQL, Redis, RabbitMQ）
# 前端、后端、AI模块在本地直接运行，不使用容器

services:
    # PostgreSQL数据库
    postgres:
        image: postgres:17.6-alpine
        container_name: var-postgres-dev
        restart: unless-stopped
        env_file:
            - .env
        environment:
            POSTGRES_DB: ${DB_NAME}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            PGDATA: /var/lib/postgresql/data/pgdata
            # 设置 locale 以避免警告
            LANG: en_US.utf8
            LC_ALL: en_US.utf8
        ports:
            - "${DB_PORT}:5432"
        volumes:
            - ./.docker-data/postgres:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
            interval: 10s
            timeout: 5s
            retries: 5

    # Redis缓存
    redis:
        image: redis:8.2.1-alpine
        container_name: var-redis-dev
        restart: unless-stopped
        env_file:
            - .env
        command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
        ports:
            - "${REDIS_PORT}:6379"
        volumes:
            - ./.docker-data/redis:/data
        healthcheck:
            test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
            interval: 10s
            timeout: 3s
            retries: 5

    # RabbitMQ消息队列
    rabbitmq:
        image: rabbitmq:4.1.4-management-alpine
        container_name: var-rabbitmq-dev
        restart: unless-stopped
        env_file:
            - .env
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
            RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
        ports:
            - "${RABBITMQ_PORT}:5672" # AMQP端口
            - "15672:15672" # 管理界面端口
        volumes:
            - ./.docker-data/rabbitmq:/var/lib/rabbitmq
        healthcheck:
            test: ["CMD", "rabbitmq-diagnostics", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5

networks:
    default:
        name: var-network-dev
